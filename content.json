{"meta":{"title":"Study4Fun","subtitle":"学而时习之","description":"","author":"Mii Wang","url":"https://study4.fun","root":"/"},"pages":[{"title":"关于","date":"2020-05-18T09:25:11.086Z","updated":"2020-05-18T09:25:11.086Z","comments":false,"path":"about/index.html","permalink":"https://study4.fun/about/","excerpt":"","text":"个人详细介绍"},{"title":"分类","date":"2020-05-18T09:25:11.086Z","updated":"2020-05-18T09:25:11.086Z","comments":false,"path":"categories/index.html","permalink":"https://study4.fun/categories/","excerpt":"","text":""},{"title":"友情链接","date":"2020-05-18T09:25:11.086Z","updated":"2020-05-18T09:25:11.086Z","comments":true,"path":"links/index.html","permalink":"https://study4.fun/links/","excerpt":"","text":""},{"title":"标签","date":"2020-05-18T09:25:11.086Z","updated":"2020-05-18T09:25:11.086Z","comments":false,"path":"tags/index.html","permalink":"https://study4.fun/tags/","excerpt":"","text":""}],"posts":[{"title":"2019的闲言碎语","slug":"2019的闲言碎语","date":"2020-01-01T08:45:58.000Z","updated":"2020-05-18T09:25:45.572Z","comments":true,"path":"2020/01/01/2019-comments/","link":"","permalink":"https://study4.fun/2020/01/01/2019-comments/","excerpt":"","text":"回顾总是有种从时间线开始的惯性。2019 年开始于天津不好吃的本地餐厅，结束于一顿火烧云不好吃的外卖。如同不好吃的饭，其实这一年经历的过程也算不上顺遂心意。 平行的工作线年前的两个月忙着做实验室的项目，年后开始准备实习的事情。我常说自己足够幸运，在应该做某件事的时候就去做了这件事，这样尽力就好。但这也只是在事后对于自己的些微自嘲而已，我还是改不掉过分焦虑的坏毛病。正如高考前失眠，考研前默背政治到半夜，准备实习的我还是经常会自己一个人默默焦虑地胡思乱想到失眠。 中间经历了其实不算多的面试，因为想要投的岗位对口的其实并不算多。在实验室的经历让我走了一条和别的同学不太一样的岗位，得益于平时的兴趣比较杂比较宽泛，算是很幸运的拿到了实习岗位。其实回顾来看，最后的结果其实是超乎于我自己意料之外的，因为入职后见过身边远远优秀与我的同学太多。 如果对当前的选择感到迷茫，不如找一个能看清方向的人交流，远比自己尝试碰壁或者和同类人无效讨论要有效得多。希望自己能在以后的经历中谨记住这一点。 工作了三四个月，回顾下其实觉得收益到最多的反而是工作方式。很多时候，我们抱怨工作枯燥，内容无趣。但总是会有人能从这些枯燥的工作中提取出更有效的东西，提高自己的效率，提高自己的思考深度，这让我真切体会到平凡和优秀的区别。说和做，差的总是很远。 后面回到学校准备毕设中期，除了完成一篇自己之前觉得有点难度的水论文，倒也没有什么大的波澜。 平行的生活线对于个人生活来说，19 年真的是很重要的一年。不同于工作上能够絮絮叨叨说出个所以然，对于我来说，生活是由一个个或难忘或开心或感动，也或是平凡幸福的时刻组成的。很多个这样的时刻会慢慢沉淀成一种潜移默化的东西，支撑自己在各种困难的时候坚持过去。今年这样的时刻格外的多，或许因为不再是一个人的原因吧。 如果说要给自己的 2020 寄托一些什么希冀一些什么，大概还是一些意识到却没有做到的东西。 能够想到就去做，但是还没坚持做下去。 能够开始反思，但是还没及时改变。 其实如果能做到这两点，总感觉 2020 就会好。但是人总是有点惰性的，我也还是那个对自己有限悲观的人。接下来的一年，能做到一个，也足够让我满足了。毕竟，顺遂心意永远是最重要的。拧巴地生活，还不如维持现状呢。","categories":[{"name":"日记","slug":"日记","permalink":"https://study4.fun/categories/%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"杂项","slug":"杂项","permalink":"https://study4.fun/tags/%E6%9D%82%E9%A1%B9/"}]},{"title":"标题","slug":"Hexo日志模板","date":"2018-09-09T05:55:00.000Z","updated":"2020-05-18T09:25:45.308Z","comments":true,"path":"2018/09/09/英文标题/","link":"","permalink":"https://study4.fun/2018/09/09/%E8%8B%B1%E6%96%87%E6%A0%87%E9%A2%98/","excerpt":"","text":"","categories":[{"name":"杂项","slug":"杂项","permalink":"https://study4.fun/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"网络配置","slug":"网络配置","permalink":"https://study4.fun/tags/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"},{"name":"DNS","slug":"DNS","permalink":"https://study4.fun/tags/DNS/"}]},{"title":"Kubernetes学习笔记——Pod调度","slug":"Kubernetes学习笔记——Pod调度","date":"2018-09-09T05:55:00.000Z","updated":"2020-05-18T09:25:45.460Z","comments":true,"path":"2018/09/09/k8s-pod-scheduling/","link":"","permalink":"https://study4.fun/2018/09/09/k8s-pod-scheduling/","excerpt":"","text":"0x01. Deployment/RC 全自动调度效果：在集群内始终维持用户指定的副本数量 使用：spec.replicas 原理：系统自动调度算法。由 Master 的 Scheduler 经过一系列算法计算得出，用户无法干预调度过程和结果。 0x02. NodeSelector效果：通过 Node 的标签和 Pod 的 nodeSelector 属性进行匹配，将 Pod 调度到指定的 Node 上 使用： 为目标 Node 打标签 1kubectl label nodes &lt;node-name&gt; &lt;label-key&gt;&#x3D;&lt;label-value&gt; 在 Pod 定义中加上 nodeSelector 的设置 1234#pod.yaml---nodeSelector: &lt;label-key&gt;: &lt;your-selected-label-name&gt; 补充： 如果多个 Node 定义了相同的标签，则会根据调度算法从这组 Node 中挑选一个可用的 Node 进行调度 若 Pod 指定的 nodeSelector 条件集群中不存在符合的节点，则该 Pod 无法被成功调度，即使集群中还有可用的 Node 0x03. 亲和性调度篇幅原因，另外一篇单独记录 0x04. 污点(Taints)和容忍(Tolerations)效果：Pod 无法在标记了 Taint 属性的节点上运行, 同时，设置了 Tolerations 的 Pod 可以运行在标注了 Taint 的 Node 上 使用： 为 Node 设置 Taint 信息 1kubectl taint nodes node1 key1&#x3D;value1:NoSchedule 在 Pod 的配置文件中配置 tolerations 属性 tolerations: key: “key” operator: “Equal” value: “value” effect: “NoSchdule” 补充： Taint 和 Toleration 声明需要保持对应一致，且 operator 需要为 Exists 或者 Equal（Equal 需要指定相等 value）； 空 key 配合 Exists 能够匹配所有键值，空 effect 匹配所有 effect； effect 取值也可以设置为 Prefer，例如 PreferNoSchedule，视为软限制； 同个 Node 可以设置多个 Taint，对应的，Pod 也可以设置多个 Toleration。 0x05. DaemonSet效果：在每个 Node 上调度运行同一个（种）Pod，例如日志采集、性能监控、存储的 Daemon 进程 使用： 12apiVersion: extensions/v1beta1kind: DaemonSet 补充： 除了使用系统内置算法在每台 Node 上调度外，也可以在 Pod 定义中使用 NodeSelector 或者 NodeAffinity 来指定满足料件的 Node 范围进行调度 0x06. 批处理调度效果：并行/串行启动多个计算进程去处理一批工作项（Work Item，下称 WI），处理完成后，批处理任务结束 任务模式分类： Job Template Expansion 模式：Job 和 WI 一对一对应，适用于 WI 数量少，但是单 WI 处理数据量大的场景； Queue with Pod Per Work Item 模式：使用一个任务队列存放 WI，Job 作为 Consumer 去完成 WI（对应的，Job 会启动多个 Pod，每个 Pod 对应一个 WI），可用 MQ 实现； Queue with Variable Pod Count 模式：与 2 模式类似，但是 Job 启动的 Pod 数量是可变的，可用 Redis 或数据库实现； Single Job with Static Work Assignment 模式：一个 Job 产生多个 Pod，但是采用程序静态方式分配任务（Kubernetes 不支持，书中所写）。 Job 分类： Non-parallel Jobs：一个 Job 启动一个 Pod，Pod 正常结束则 Job 结束。 Parallel Jobs with a fixed completion count：Job 会启动多个 Pod（数目为 spec.completions），正常结束的 Pod 达到这个数目后 Job 结束。spec.parallelism 可以用来控制并行度。 Parallel Jobs with a work queue：WI 在 Queue 中存放，无法设置并行度参数。每个 Pod 都能够独立判断是否还有任务需要处理，同时，一个 Pod 成功结束则其他 Pod 必定处于即将结束、退出的状态，且 Job 不会再启动新的 Po）。所有 Pod 结束，且至少一个 Pod 成功结束则 Job 算成功结束。 （个人理解：上述的规则说明其实是在说所有 Pod 表现为同一整体，Pod 启动失败会重启是一种容错机制。然而从整个过程的跨度来看，无需关心失败启动的数目，只要不是所有 Pod 全部失败结束，只需存在一个成功结束的 Pod 即表明 Job 流程内的其他划分任务都正常完成，整体任务也已成功完成。） 0x07. 定时任务效果：定期触发任务执行 使用： 在 API Server 启动进程上添加配置参数 1--runtime-config=batch/v2alpha1=true 编写 Cron Job 配置文件 123456#cron.yamlapiVersion: batch/v2alpha1kind: CronJob---spec: schedule: \"*/1 * * * *\" 2. schedule 格式如下 1Min Hour DayOfMonth Month DayOfWeek 2. *表示任意值，即每个时间单元节点都会触发 /表示开始触发的时间，例如 5/20，表明第一次触发在第 5 个时间单位，此后每隔 20 个时间单位触发 0x08. 自定义调度器在 Pod 中提供自定义的调度器名称，则默认调度器就会失效，转而使用指定的调度器完成对应 Pod 的调度，自定义的调度器需要通过 kube-proxy 来运行，如果自定义调度器始终未启动，则 Pod 将会卡 Pending 状态。 12345apiVersion: v1kind: Pod---spec: schedulerName: my-scheduler 0x09. 补充 Admission controller 需要仔细研究 TaintBasedEviction 和 Eureka 中的驱逐机制（包括 SELF PRESERVATION)是否在设计层面上有一定的共通点 自定义调度器实现有时间需要手动验证一次","categories":[{"name":"学习笔记","slug":"学习笔记","permalink":"https://study4.fun/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"Kubernetes","slug":"Kubernetes","permalink":"https://study4.fun/tags/Kubernetes/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://study4.fun/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"Pod","slug":"Pod","permalink":"https://study4.fun/tags/Pod/"}]},{"title":"校园网下OpenWrt配置DNS","slug":"校园网下OpenWrt配置DNS","date":"2018-09-09T05:55:00.000Z","updated":"2020-05-18T09:25:45.520Z","comments":true,"path":"2018/09/09/config-dns/","link":"","permalink":"https://study4.fun/2018/09/09/config-dns/","excerpt":"","text":"在上一篇文章的末尾写到，初次配置 OP 系统时候在校内网实现了 IPV6 穿透，但是 DNS 出现了问题。查阅资料后发现与 OP 的反域名劫持保护机制有关系，下面详述一下。 0x02 OP 的反域名劫持保护OP 的反域名劫持保护在默认情况是开开启的，具体设置在/etc/config/dhcp下。 12config dnsmasq option rebind_protection &#39;1&#39; 在反域名劫持保护未关闭的情况下，由于上级 dns 返回的地址是个私有局域网地址，所以被看作是一次域名劫持，从而丢弃了解析的结果。 直接的方法就是将上面的字段值改为0，关闭即可。在 GUI 配置界面等同于将Network-&gt;DHCP DNS-Server Settings-&gt;General Settings-&gt;Rebind protection的勾取消掉。 再仔细查看文档发现也可以通过白名单的方式放行想要解析的内网域名，更为安全,此时 Rebind protection 也是处于开启状态，上面的关闭操作不需要进行。而具体修改的操作示例如下所示： 123config dnsmasq list rebind_domain &#39;bupt.edu.cn&#39; list rebind_domain &#39;byr.cn&#39; 表示在反域名劫持保护情况下，将bupt.edu.cn,byr.cn域名加入白名单，允许返回内网地址。在 GUI 配置界面等同于在Network-DHCP DNS-Server Settings-General Settings-Domain whitelist添加想要解析的内网域名。 0x03 自定义 DNS 规则在学校 DNS 偶尔抽风或者速度慢的情况下，产生了自定义 DNS 的想法。由于教务系统等系统的访问需要，在各个客户端修改 hosts 略显麻烦，并且 DNSmasq 亦可以实现广告屏蔽，因此采用 DNSmasq 来实现不同的 DNS 解析。预期需求为bupt.edu.cn, byr.cn域名使用校内 DNS 解析，其他地址使用公共 DNS 解析（以 114 为例）。 修改 Wan 口 DNSWan 口 DNS 主要控制路由器访问网络使用的 DNS 服务器。例如，路由器安装软件需要访问网络，那么所使用的 DNS 服务器就是这个。 在/etc/config/network文件中的 wan 接口添加两行 peerdns 以及 dns 字段： 12345config interface &#39;wan&#39; ...... option peerdns &#39;0&#39; option dns &#39;114.114.114.114&#39; ...... 重启 network 服务后生效。在 GUI 配置界面等同于在Network-Interface-Wan-Edit-Common Configuration-Advanced Settings中取消Use DNS servers advertised by peer的勾选，并在Use custom DNS servers添加默认的 DNS 服务器。 修改 Lan 口 DNS（可跳过）LAN 口 DNS 主要控制连接到路由器的设备使用的 DNS。例如，连到路由的电脑上网时使用的 DNS 服务器就在这里设置。 一般情况下，Lan 和 Wan 口 DNS 保持一致即可。如若有需要，修改/etc/config/dhcp文件中 dnsmasq 的 resolvfile 指向即可： 1234config dnsmasq .... option resolvfile &#39;&#x2F;etc&#x2F;resolv.dnsmasq.conf&#39; .... 同时需要在/etc/resolv.dnsmasq.conf下新建对应的配置文件。示例如下： 12nameserver 114.114.114.114nameserver 2001:4860:4860::8888 修改 Dns 自定义的内网解析规则接下来就是配置校内域名使用的 DNS 解析地址。修改/etc/config/dhcp文件中 dnsmasq。首先是删除下面两行配置： 12345config dnsmasq .... option filterwin2k &#39;0&#39; option nonegcache &#39;0&#39; .... 其次添加 list server 字段，对bupt.edu.cn, byr.cn相关域名使用校内 DNS 解析： 123config dnsmasq list server &#39;&#x2F;bupt.edu.cn&#x2F;10.3.9.5&#39; list server &#39;&#x2F;byr.cn&#x2F;10.3.9.5&#39; 在 GUI 配置界面等同于在Network-DHCP and DNS-Server Settings-General Settings-DNS forwardings添加对应域名的 DNS 解析服务器地址。 0x04 后话DNSmasq 的用法远不止于此，可用来内网域名 IP 映射代替 hosts，自定义域名解析规则屏蔽广告等，有时间会再研究。","categories":[{"name":"杂项","slug":"杂项","permalink":"https://study4.fun/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"网络配置","slug":"网络配置","permalink":"https://study4.fun/tags/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"},{"name":"DNS","slug":"DNS","permalink":"https://study4.fun/tags/DNS/"}]},{"title":"双栈网络配置路由器的ipv6穿透","slug":"双栈网络配置路由器的ipv6穿透","date":"2016-03-20T14:47:00.000Z","updated":"2020-05-18T09:25:45.584Z","comments":true,"path":"2016/03/20/config-ipv6/","link":"","permalink":"https://study4.fun/2016/03/20/config-ipv6/","excerpt":"","text":"本教程测试过程基于 Newifi Y2 路由器，系统为 PandoraBox，理论上 OpenWrt 原生同样适用。 1.修改路由器的软件源123456789101112dest root &#x2F;dest ram &#x2F;tmplists_dir ext &#x2F;var&#x2F;opkg-listsoption overlay_root &#x2F;overlaysrc&#x2F;gz 14.09_base http:&#x2F;&#x2F;downloads.openwrt.org.cn&#x2F;PandoraBox&#x2F;ralink&#x2F;packages&#x2F;basesrc&#x2F;gz 14.09_telephony http:&#x2F;&#x2F;downloads.openwrt.org&#x2F;chaos_calmer&#x2F;15.05&#x2F;ramips&#x2F;mt7620&#x2F;packages&#x2F;telephonysrc&#x2F;gz 14.09_packages http:&#x2F;&#x2F;downloads.openwrt.org&#x2F;chaos_calmer&#x2F;15.05&#x2F;ramips&#x2F;mt7620&#x2F;packages&#x2F;packagessrc&#x2F;gz 14.09_routing http:&#x2F;&#x2F;downloads.openwrt.org&#x2F;chaos_calmer&#x2F;15.05&#x2F;ramips&#x2F;mt7620&#x2F;packages&#x2F;routingsrc&#x2F;gz 14.09_management http:&#x2F;&#x2F;downloads.openwrt.org&#x2F;chaos_calmer&#x2F;15.05&#x2F;ramips&#x2F;mt7620&#x2F;packages&#x2F;managementarch ralink 1arch all 2arch ramips_24kec 3 注:软件源由于硬件配置不同的会有所区别，Newifi 是 MT7620 方案，其他芯片方案的请移步以下两个网址自行匹配： OpenWrt 中文网址 http://downloads.openwrt.org.cn/OpenWrt download area https://downloads.openwrt.org/ 2.配置 Odhcpd 软件包中更新并安装最新版本的 odhcpd 修改 dhcp 文件（文件路径：/etc/config/dhcp，不熟悉 ssh 的可以使用 winscp 修改) 123456789101112131415161718192021222324252627282930313233343536373839404142config dnsmasq option domainneeded &#39;1&#39; option boguspriv &#39;1&#39; option filterwin2k &#39;0&#39; option localise_queries &#39;1&#39; option rebind_protection &#39;1&#39; option rebind_localhost &#39;1&#39; option local &#39;&#x2F;lan&#x2F;&#39; option domain &#39;lan&#39; option expandhosts &#39;1&#39; option nonegcache &#39;0&#39; option authoritative &#39;1&#39; option readethers &#39;1&#39; option leasefile &#39;&#x2F;tmp&#x2F;dhcp.leases&#39; option resolvfile &#39;&#x2F;tmp&#x2F;resolv.conf.auto&#39; option localservice &#39;1&#39;config dhcp &#39;lan&#39; option interface &#39;lan&#39; option start &#39;100&#39; option limit &#39;150&#39; option leasetime &#39;12h&#39; option dhcpv6 &#39;hybrid&#39; option ra &#39;hybrid&#39; option ndp &#39;hybrid&#39; option ra_management &#39;1&#39;config dhcp &#39;wan&#39; option interface &#39;wan&#39; option ignore &#39;1&#39;config odhcpd &#39;odhcpd&#39; option maindhcp &#39;0&#39; option leasefile &#39;&#x2F;tmp&#x2F;hosts&#x2F;odhcpd&#39; option leasetrigger &#39;&#x2F;usr&#x2F;sbin&#x2F;odhcpd-update&#39;config dhcp &#39;wan6&#39; option interface &#39;wan&#39; option dhcpv6 &#39;hybrid&#39; option ra &#39;hybrid&#39; option ndp &#39;hybrid&#39; option master &#39;1&#39; 修改后保存并重启路由器即可。 3.后话配置后好像 dns 出了一些问题，在访问其他校内以.byr.cn 或.bupt.edu.cn 为后缀的网址显示 dns 错误，如果有大牛解决了这个 DNS 问题，可以分享一下思路。 2018.9.9 更新：后话所述问题已经解决","categories":[{"name":"杂项","slug":"杂项","permalink":"https://study4.fun/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"网络配置","slug":"网络配置","permalink":"https://study4.fun/tags/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"},{"name":"IPV6","slug":"IPV6","permalink":"https://study4.fun/tags/IPV6/"}]}],"categories":[{"name":"日记","slug":"日记","permalink":"https://study4.fun/categories/%E6%97%A5%E8%AE%B0/"},{"name":"杂项","slug":"杂项","permalink":"https://study4.fun/categories/%E6%9D%82%E9%A1%B9/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://study4.fun/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"杂项","slug":"杂项","permalink":"https://study4.fun/tags/%E6%9D%82%E9%A1%B9/"},{"name":"网络配置","slug":"网络配置","permalink":"https://study4.fun/tags/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"},{"name":"DNS","slug":"DNS","permalink":"https://study4.fun/tags/DNS/"},{"name":"Kubernetes","slug":"Kubernetes","permalink":"https://study4.fun/tags/Kubernetes/"},{"name":"学习笔记","slug":"学习笔记","permalink":"https://study4.fun/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"Pod","slug":"Pod","permalink":"https://study4.fun/tags/Pod/"},{"name":"IPV6","slug":"IPV6","permalink":"https://study4.fun/tags/IPV6/"}]}